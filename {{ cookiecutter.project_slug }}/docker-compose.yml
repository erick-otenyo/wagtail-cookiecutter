# backend environment variables, their defaults if left blank etc.
x-backend-variables: &backend-variables
  WAIT_HOSTS: {{ cookiecutter.project_slug }}-db:5432,{{ cookiecutter.project_slug }}-redis:6379
  WAIT_TIMEOUT: 120
  GUNICORN_NUM_OF_WORKERS: ${GUNICORN_NUM_OF_WORKERS:-4}
  GUNICORN_TIMEOUT: ${GUNICORN_TIMEOUT:-300}
  DEBUG: ${DEBUG}
  WAGTAIL_SITE_NAME: ${WAGTAIL_SITE_NAME:-}
  ADMIN_URL_PATH: ${ADMIN_URL_PATH:-}
  TIME_ZONE: ${TIME_ZONE:-UTC}
  SECRET_KEY: ${SECRET_KEY:?}
  ALLOWED_HOSTS: ${ALLOWED_HOSTS}
  CSRF_TRUSTED_ORIGINS: ${CSRF_TRUSTED_ORIGINS}
  DATABASE_URL: postgis://${DB_USER}:${DB_PASSWORD}@{{ cookiecutter.project_slug }}-db:5432/${DB_NAME}
  EMAIL_HOST: ${EMAIL_HOST:-}
  EMAIL_PORT: ${EMAIL_PORT:-}
  EMAIL_USE_TLS: ${EMAIL_USE_TLS:-}
  EMAIL_HOST_USER: ${EMAIL_HOST_USER:-}
  EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD:-}
  DJANGO_ADMINS: ${DJANGO_ADMINS:-}
  WAGTAILADMIN_BASE_URL: ${WAGTAILADMIN_BASE_URL:-}
  LANGUAGE_CODE: ${LANGUAGE_CODE:-en}
  LOG_LEVEL: ${LOG_LEVEL:-WARN}
  CELERY_BEAT_DEBUG_LEVEL: ${CELERY_BEAT_DEBUG_LEVEL:-INFO}
  MIGRATE_ON_STARTUP: ${MIGRATE_ON_STARTUP:-true}
  COLLECT_STATICFILES_ON_STARTUP: ${COLLECT_STATICFILES_ON_STARTUP:-true}
  MEDIA_ROOT: ${MEDIA_ROOT:-/{{ cookiecutter.project_module }}/media}
  STATIC_ROOT: ${MEDIA_ROOT:-/{{ cookiecutter.project_module }}/static}
  REDIS_URL: redis://{{ cookiecutter.project_slug }}-redis:6379/0

services:
  {{ cookiecutter.project_slug }}-db:
    container_name: {{ cookiecutter.project_slug }}-db
    image: postgis/postgis:16-master
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432"
    volumes:
      - ${DB_VOLUME:-./docker/db_data/}:/var/lib/postgresql/data/

  {{ cookiecutter.project_slug }}-redis:
    image: redis:alpine
    container_name: {{ cookiecutter.project_slug }}-redis
    restart: unless-stopped

  {{ cookiecutter.project_slug }}-web:
    container_name: {{ cookiecutter.project_slug }}-web
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - UID=${UID}
        - GID=${GID}
    restart: unless-stopped
    command: gunicorn wsgi
    environment:
      <<: *backend-variables
    expose:
      - "8000"
    depends_on:
      - {{ cookiecutter.project_slug }}-db
      - {{ cookiecutter.project_slug }}-redis
    ports:
      - "8000"
    volumes:
      - ${STATIC_VOLUME:-./docker/static}:/{{ cookiecutter.project_slug }}/static
      - ${MEDIA_VOLUME:-./docker/static}:/{{ cookiecutter.project_slug }}/media
      - ${BACKUP_VOLUME:-./docker/backup}:/{{ cookiecutter.project_slug }}/backup

  {{ cookiecutter.project_slug }}-celery-worker:
    container_name: {{ cookiecutter.project_slug }}-celery-worker
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - UID=${UID}
        - GID=${GID}
    restart: unless-stopped
    init: true
    command: celery-worker
    environment:
      <<: *backend-variables
    depends_on:
      - {{ cookiecutter.project_slug }}-db
      - {{ cookiecutter.project_slug }}-redis
    volumes:
      - ${STATIC_VOLUME:-./docker/static}:/{{ cookiecutter.project_slug }}/static
      - ${MEDIA_VOLUME:-./docker/static}:/{{ cookiecutter.project_slug }}/media
      - ${BACKUP_VOLUME:-./docker/backup}:/{{ cookiecutter.project_slug }}/backup

  {{ cookiecutter.project_slug }}-celery-beat:
    container_name: {{ cookiecutter.project_slug }}-celery-beat
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - UID=${UID}
        - GID=${GID}
    restart: unless-stopped
    init: true
    command: celery-beat
    environment:
      <<: *backend-variables
    depends_on:
      - {{ cookiecutter.project_slug }}-db
      - {{ cookiecutter.project_slug }}-redis
    volumes:
      - ${STATIC_VOLUME:-./docker/static}:/{{ cookiecutter.project_slug }}/static
      - ${MEDIA_VOLUME:-./docker/static}:/{{ cookiecutter.project_slug }}/media
      - ${BACKUP_VOLUME:-./docker/backup}:/{{ cookiecutter.project_slug }}/backup

  {{ cookiecutter.project_slug }}-web-proxy:
    container_name:  {{ cookiecutter.project_slug }}-web-proxy
    image: nginx:1.20.2-alpine
    restart: unless-stopped
    volumes:
      - ${STATIC_VOLUME:-./docker/static}:/{{ cookiecutter.project_slug }}/static
      - ${MEDIA_VOLUME:-./docker/static}:/{{ cookiecutter.project_slug }}/media
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - ${WEB_PROXY_PORT:-80}:80